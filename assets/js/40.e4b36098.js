(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{389:function(e,t,r){"use strict";r.r(t);var s=r(26),a=Object(s.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"解决curl-error-60-peer-s-certificate-issuer-is-not-recognized-问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#解决curl-error-60-peer-s-certificate-issuer-is-not-recognized-问题"}},[e._v("#")]),e._v(" 解决cURL error 60 Peer's Certificate issuer is not recognized.问题")]),e._v(" "),r("p",[e._v("有时更新了SSL证书后，在浏览器端正常访问，但在服务端，比如PHP不能正常请求该接口，报错如下：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("cURL error 60: Peer's Certificate issuer is not recognized.\n")])])]),r("p",[e._v("如果使用PHP的file_get_contents函数，报错如下：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("PHP Warning:  file_get_contents(): SSL operation failed with code 1. OpenSSL Error messages:\nerror:14090086:SSL routines:ssl3_get_server_certificate:certificate verify failed\n")])])]),r("p",[e._v("使用curl命令测试下，报错如下：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("curl: (60) Peer's Certificate issuer is not recognized.\nMore details here: http://curl.haxx.se/docs/sslcerts.html\n\ncurl performs SSL certificate verification by default, using a \"bundle\"\n of Certificate Authority (CA) public keys (CA certs). If the default\n bundle file isn't adequate, you can specify an alternate file\n using the --cacert option.\nIf this HTTPS server uses a certificate signed by a CA represented in\n the bundle, the certificate verification probably failed due to a\n problem with the certificate (it might be expired, or the name might\n not match the domain name in the URL).\nIf you'd like to turn off curl's verification of the certificate, use\n the -k (or --insecure) option.\n")])])]),r("p",[e._v("说得很清楚了，更新的SSL没匹配上，我们要手动处理下。")]),e._v(" "),r("h2",{attrs:{id:"处理方法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#处理方法"}},[e._v("#")]),e._v(" 处理方法")]),e._v(" "),r("p",[e._v("1.用火狐浏览器(Firefox)打开地址,点击网址旁边那个安全锁的图标，点击安全连接，点击更多信息，会弹出一个安全页面信息。")]),e._v(" "),r("p",[e._v("2.点击安全证书，在打开的页面中往下浏览，找到一个下载项，点击 PEM（证书链），将该文件下载到本地。")]),e._v(" "),r("p",[e._v("3.将该文件上传到服务器，如果是centos，将该文件上传到目录"),r("code",[e._v("/etc/pki/ca-trust/source/anchors/")]),e._v("下，将文件的后缀名改为.crt, 然后执行命令"),r("code",[e._v("update-ca-trust extract")])]),e._v(" "),r("p",[e._v("4.此时就可以正常curl了。")]),e._v(" "),r("h2",{attrs:{id:"requests库的问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#requests库的问题"}},[e._v("#")]),e._v(" Requests库的问题")]),e._v(" "),r("p",[e._v("php有个封装的库https://github.com/rmccue/Requests,它有个自己维护的"),r("code",[e._v("cacert.pem")]),e._v("文件，路径在"),r("code",[e._v("vendor/rmccue/requests/library/Requests/Transport/cacert.pem")]),e._v("。")]),e._v(" "),r("p",[e._v("如果用到了这个库，要手动更新下这个文件，将刚才下载的证书内容追加到这个文件后面即可。")]),e._v(" "),r("p",[r("code",[e._v("cat xxx.crt >> ./vendor/rmccue/requests/library/Requests/Transport/cacert.pem")])]),e._v(" "),r("p",[e._v("完成后就可以正常使用这个库了。")])])}),[],!1,null,null,null);t.default=a.exports}}]);