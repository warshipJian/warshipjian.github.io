(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{409:function(a,s,t){"use strict";t.r(s);var r=t(26),e=Object(r.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"redis-06-通信协议resp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redis-06-通信协议resp"}},[a._v("#")]),a._v(" redis-06-通信协议RESP")]),a._v(" "),t("h2",{attrs:{id:"简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[a._v("#")]),a._v(" 简介")]),a._v(" "),t("p",[a._v("redis的通信协议是Redis Serialization Protocol，简称RESP，有如下特性：")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("是二进制安全的\n在TCP层\n基于请求-响应的模式\n")])])]),t("p",[a._v("需注意的是：RESP是redis客户端和服务端通信的协议，节点交互不使用这个协议。")]),a._v(" "),t("h2",{attrs:{id:"resp描述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#resp描述"}},[a._v("#")]),a._v(" RESP描述")]),a._v(" "),t("p",[a._v("RESP有五种最小的单元类型，单元结束时统一加上回车换行符号\\r\\n。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("单行字符串 以 + 符号开头。\n多行字符串 以 $ 符号开头，后跟字符串长度。\n整数值 以 : 符号开头，后跟整数的字符串形式。\n错误消息 以 - 符号开头。\n数组 以 * 号开头，后跟数组的长度。\n")])])]),t("p",[a._v("如：\n"),t("strong",[a._v("单行字符串")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("+hello world\\r\\n\n")])])]),t("p",[t("strong",[a._v("错误消息")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("-WRONGTYPE Operation against a key holding the wrong kind of value\\r\\n\n")])])]),t("p",[t("strong",[a._v("整数值")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v(":1024\\r\\n\n")])])]),t("p",[t("strong",[a._v("多行字符串")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("$11\\r\\nhello world\\r\\n\n")])])]),t("p",[t("strong",[a._v("数组[1,2,3]")])]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("*3\\r\\n:1\\r\\n:2\\r\\n:3\\r\\n\n")])])]),t("h2",{attrs:{id:"客户端-服务端"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#客户端-服务端"}},[a._v("#")]),a._v(" 客户端->服务端")]),a._v(" "),t("p",[a._v("客户端向服务器发送的指令只有一种格式，"),t("strong",[a._v("多行字符串数组")]),a._v("。")]),a._v(" "),t("p",[a._v("比如一个简单的 set 指令set author codehole会被序列化成下面的字符串。")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("*3\\r\\n$3\\r\\nset\\r\\n$6\\r\\nauthor\\r\\n$8\\r\\ncodehole\\r\\n\n")])])]),t("h2",{attrs:{id:"服务器-客户端"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#服务器-客户端"}},[a._v("#")]),a._v(" 服务器 -> 客户端")]),a._v(" "),t("p",[a._v("服务器向客户端回复的响应支持多种数据结构，即以上 5 中基本类型的组合。")]),a._v(" "),t("h2",{attrs:{id:"抓包看看"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#抓包看看"}},[a._v("#")]),a._v(" 抓包看看")]),a._v(" "),t("p",[a._v("我们用wireshark来抓下包，看看实际的RESP。")]),a._v(" "),t("p",[a._v("在redis上增加个key")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("127.0.0.1:6379> set hi 'hello world'\nOK\n")])])]),t("p",[t("strong",[a._v("1. 客户端发送给服务端")])]),a._v(" "),t("p",[t("img",{attrs:{src:"https://img.xiaoxiaoguo.cn/usr/uploads/2018/08/216994247.png",alt:"redis-resp-1.png"}})]),a._v(" "),t("p",[a._v("看data段的数据，整个数据结构是RESP的多行字符串结构，以*3开头，后面两个字节是0d，0a，对应ASCII是回车键和换行键，即\\r和\\n，后面的结构都符合多行字符串结构。")]),a._v(" "),t("p",[t("strong",[a._v("2. 服务端发送给客户端")])]),a._v(" "),t("p",[t("img",{attrs:{src:"https://img.xiaoxiaoguo.cn/usr/uploads/2018/08/2704198116.png",alt:"redis-resp2.png"}})]),a._v(" "),t("p",[a._v("服务端返回的是ok，结构是单行字符串的，即")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("+ok\\r\\n\n")])])]),t("p",[a._v("感兴趣的话，可以再抓抓其他的数据结构。")])])}),[],!1,null,null,null);s.default=e.exports}}]);