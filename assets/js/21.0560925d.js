(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{371:function(t,a,s){"use strict";s.r(a);var e=s(26),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"aufs简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aufs简介"}},[t._v("#")]),t._v(" AUFS简介")]),t._v(" "),s("p",[t._v("早期docker的默认文件系统是AUFS（后来是Overlay），今天来简单学习一下。\n我们先实验一下，真实感受下aufs。在Ubuntu中默认就安装了aufs，可以直接使用。")]),t._v(" "),s("h2",{attrs:{id:"aufs实验"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aufs实验"}},[t._v("#")]),t._v(" AUFS实验")]),t._v(" "),s("h3",{attrs:{id:"准备"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#准备"}},[t._v("#")]),t._v(" 准备")]),t._v(" "),s("p",[t._v("准备三个目录: base ，mnt ， top。在base目录下准备base.txt 和 common.txt文件，在top目录下准备common.txt和foo.txt文件， mnt目录用于挂载")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# tree\n.\n├── base\n│   ├── base.txt\n│   └── common.txt\n├── mnt\n└── top\n    ├── common.txt\n    └── foo.txt\n")])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# cat base/base.txt \nbase base.txt\n\n# cat base/common.txt \nbase common.txt\n\n# cat top/foo.txt \ntop foo.txt\n\n# cat top/common.txt \ntop common.txt\n")])])]),s("h3",{attrs:{id:"开始"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开始"}},[t._v("#")]),t._v(" 开始")]),t._v(" "),s("p",[t._v("用AUFS，把 base 和 top 一起 mount 到 ./mnt 目录：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("mount -t aufs -o br=./top:./base none ./mnt\n")])])]),s("p",[t._v("mount 命令的参数意义如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("-t aufs：mount 的文件类型，使用的是 aufs\n-o：传递个 aufs 的选项，每个文件类型的选项不同\nbr：表示 branch，也就是 aufs 需要的的各个目录\nnone：这个本来是设备的名字，但是我们并没有用到任何设备，只会用到文件夹，因此这里为 none\n./mnt：挂载点，也就是内容最终出现的目录\n")])])]),s("p",[t._v("看下mnt目录：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# ls mnt\nbase.txt  common.txt  foo.txt\n")])])]),s("p",[t._v("发现common.txt被合并了，看下common.txt的内容：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# cat mnt/common.txt \ntop common.txt\n")])])]),s("p",[t._v("修改一下base.txt文件：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# echo 'change base' > mnt/base.txt\n")])])]),s("p",[t._v("会发现top目录下多了一个base.txt文件")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# ls top \nbase.txt  common.txt  foo.txt\n")])])]),s("p",[t._v("而base目录下的base.txt并没有改变：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# cat base/base.txt \nbase base.txt\n")])])]),s("p",[t._v("这一切是为什么？")]),t._v(" "),s("h3",{attrs:{id:"aufs介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aufs介绍"}},[t._v("#")]),t._v(" AUFS介绍")]),t._v(" "),s("p",[t._v("AUFS 的全称是 Advanced Multi-layered unification filesytem，它的主要功能是：把多个目录结合成一个目录，对外使用。\n把多个目录 mount 成一个，读写操作步骤如下：")]),t._v(" "),s("ol",[s("li",[t._v("默认情况下，最上层的目录为读写层，只能有一个")]),t._v(" "),s("li",[t._v("下面可以有一个或者多个只读层读文件")]),t._v(" "),s("li",[t._v("读文件，从最上面一个开始往下逐层去找，打开第一个找到的文件，读取其中的内容")]),t._v(" "),s("li",[t._v("写文件，如果在最上层找到了该文件，直接打开\n否则，从上往下开始查找，找到文件后，把文件复制到最上层，然后再打开这个 copy")]),t._v(" "),s("li",[t._v("删除文件：在最上层创建一个 whiteout 文件，.wh.<origin_file_name>，就是在原来的文件名字前面加上 .wh.")])]),t._v(" "),s("h3",{attrs:{id:"参考"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),s("p",[t._v("https://cizixs.com/2017/09/13/docker-aufs-storage-driver/")])])}),[],!1,null,null,null);a.default=n.exports}}]);